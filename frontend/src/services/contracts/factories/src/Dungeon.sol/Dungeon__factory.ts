/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Dungeon,
  DungeonInterface,
} from "../../../src/Dungeon.sol/Dungeon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_seekerContractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_runeContractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_combatVerifierContractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hasherContractAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum ActionKind",
        name: "kind",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "slotID",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8[7]",
        name: "args",
        type: "uint8[7]",
      },
    ],
    name: "Action",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum Alignment",
        name: "sourceAlignment",
        type: "uint8",
      },
      {
        internalType: "enum Alignment",
        name: "targetAlignment",
        type: "uint8",
      },
    ],
    name: "alignmentBonus",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "dungeonArmour",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dungeonHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seekerArmour",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seekerHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tick",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "pi_a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "pi_b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "pi_c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct CombatState",
        name: "state",
        type: "tuple",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "dungeonArmour",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dungeonHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seekerArmour",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seekerHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tick",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "pi_a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "pi_b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "pi_c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct CombatState",
        name: "state",
        type: "tuple",
      },
    ],
    name: "claimRune",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ActionKind",
        name: "actionKind",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "slotID",
        type: "uint8",
      },
      {
        internalType: "uint8[7]",
        name: "args",
        type: "uint8[7]",
      },
    ],
    name: "commitAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dungeonArmourAlignment",
    outputs: [
      {
        internalType: "enum Alignment",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dungeonAttackAlignment",
    outputs: [
      {
        internalType: "enum Alignment",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dungeonBattleStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dungeonHealthAlignment",
    outputs: [
      {
        internalType: "enum Alignment",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dungeonRewardRuneAlignment",
    outputs: [
      {
        internalType: "enum Alignment",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dungeonStrength",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFreeSlotID",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "slotID",
        type: "uint8",
      },
    ],
    name: "getSeekerSlotHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seekerID",
        type: "uint256",
      },
    ],
    name: "getSeekerSlotID",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "runeTypeID",
        type: "uint8",
      },
    ],
    name: "getVerifiedRuneAlignment",
    outputs: [
      {
        internalType: "enum Alignment",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Alignment",
        name: "_dungeonAttackAlignment",
        type: "uint8",
      },
      {
        internalType: "enum Alignment",
        name: "_dungeonArmourAlignment",
        type: "uint8",
      },
      {
        internalType: "enum Alignment",
        name: "_dungeonHealthAlignment",
        type: "uint8",
      },
      {
        internalType: "enum Alignment",
        name: "_dungeonRewardRuneAlignment",
        type: "uint8",
      },
    ],
    name: "resetBattle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ActionKind",
        name: "actionKind",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "seekerID",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "attackRuneID",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "armourRuneID",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "healthRuneID",
        type: "uint8",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "slots",
    outputs: [
      {
        internalType: "uint256",
        name: "seekerID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hash",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "dungeonArmour",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dungeonHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seekerArmour",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seekerHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tick",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "pi_a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "pi_b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "pi_c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct CombatState",
        name: "state",
        type: "tuple",
      },
    ],
    name: "verifyState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526003805460ff60c01b1916600560c11b1790553480156200002457600080fd5b5060405162001f4938038062001f498339810160408190526200004791620000b8565b600080546001600160a01b039586166001600160a01b031991821617909155600180549486169482169490941790935560028054928516928416929092179091556003805491909316911617905562000115565b80516001600160a01b0381168114620000b357600080fd5b919050565b60008060008060808587031215620000cf57600080fd5b620000da856200009b565b9350620000ea602086016200009b565b9250620000fa604086016200009b565b91506200010a606086016200009b565b905092959194509250565b611e2480620001256000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80635036ac18116100ad578063a65cb0ce11610071578063a65cb0ce14610290578063d5587e04146102a3578063dbe7e3bd146102b6578063e65a5d13146102c9578063e8e412df146102dc57600080fd5b80635036ac181461023b5780635747958a1461024e578063607c883a14610256578063765ba52a1461026957806396bb7ea31461027c57600080fd5b8063387dd9e9116100f4578063387dd9e91461019c5780633a5bca7e146101c45780633b7994c0146101ea5780633ceb117c146102105780633dfb0e031461022757600080fd5b80630334f041146101265780630dca5e36146101505780631a0c9e60146101735780632498fa9414610188575b600080fd5b60035461013a90600160b81b900460ff1681565b6040516101479190611457565b60405180910390f35b61016361015e3660046115bc565b6102ef565b6040519015158152602001610147565b61018661018136600461166f565b6104c3565b005b60035461013a90600160a81b900460ff1681565b6101af6101aa36600461171d565b610671565b60408051928352602083019190915201610147565b6101d76101d236600461171d565b610693565b60405160009190910b8152602001610147565b6003546101fe90600160c01b900460ff1681565b60405160ff9091168152602001610147565b61021960045481565b604051908152602001610147565b60035461013a90600160b01b900460ff1681565b610186610249366004611743565b6106e1565b6101d76107be565b6101fe61026436600461179f565b610807565b6101866102773660046115bc565b6109a2565b60035461013a90600160a01b900460ff1681565b61018661029e3660046117d8565b6109ef565b6101866102b13660046115bc565b610cd1565b6101636102c436600461171d565b611045565b6102196102d7366004611847565b61106f565b61013a6102ea366004611847565b611096565b60006102f961140e565b8251815260008061030981611897565b91505083602001518282600981106103235761032361186b565b60200201528061033281611897565b915050836040015182826009811061034c5761034c61186b565b60200201528061035b81611897565b91505083606001518282600981106103755761037561186b565b60200201528061038481611897565b91505060005b60038110156103e557600581600381106103a6576103a661186b565b60020201600101548383600981106103c0576103c061186b565b6020020152816103cf81611897565b92505080806103dd90611897565b91505061038a565b5083608001518282600981106103fd576103fd61186b565b60200201528061040c81611897565b9150508360a001518282600981106104265761042661186b565b60200201528061043581611897565b60025460c087015160e088015161010089015160405163c542c93b60e01b81529496506001600160a01b03909316945063c542c93b9361047a939088906004016118db565b602060405180830381865afa158015610497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bb9190611982565b949350505050565b600360009054906101000a90046001600160a01b03166001600160a01b031663f5b4a7886040518060c0016040528060058660ff16600381106105085761050861186b565b60020201600101548152602001846001600781106105285761052861186b565b602002015160ff168152602001846002600781106105485761054861186b565b602002015160ff168152602001846003600781106105685761056861186b565b602002015160ff168152602001846004600781106105885761058861186b565b602002015160ff168152602001846000600781106105a8576105a861186b565b602002015160ff168152506040518263ffffffff1660e01b81526004016105cf91906119a4565b602060405180830381865afa1580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061091906119d5565b60058360ff16600381106106265761062661186b565b60020201600101819055507fef9422325c26f32fc8f2e4cec249340b4f6f6d85351df420120024e073fea199838383604051610664939291906119ee565b60405180910390a1505050565b6005816003811061068157600080fd5b60020201805460019091015490915082565b6000805b60038110156106d75782600582600381106106b4576106b461186b565b600202015414156106c55792915050565b806106cf81611897565b915050610697565b5060001992915050565b436004556003805485919060ff60a01b1916600160a01b83600581111561070a5761070a61142d565b02179055506003805484919060ff60a81b1916600160a81b8360058111156107345761073461142d565b02179055506003805483919060ff60b01b1916600160b01b83600581111561075e5761075e61142d565b02179055506003805482919060ff60b81b1916600160b81b8360058111156107885761078861142d565b021790555060005b60038160ff1610156107b7576107a5816111d0565b806107af81611a45565b915050610790565b5050505050565b6000805b60038110156107fe57600581600381106107de576107de61186b565b60020201546107ec57919050565b806107f681611897565b9150506107c2565b50600019905090565b6000600183600581111561081d5761081d61142d565b14156108705760028260058111156108375761083761142d565b14156108455750600361099c565b60055b82600581111561085a5761085a61142d565b14156108685750600261099c565b50600161099c565b60028360058111156108845761088461142d565b14156108cf57600382600581111561089e5761089e61142d565b14156108ac5750600261099c565b60055b8260058111156108c1576108c161142d565b14156108685750600361099c565b60038360058111156108e3576108e361142d565b14156109125760018260058111156108fd576108fd61142d565b141561090b5750600261099c565b60046108af565b60048360058111156109265761092661142d565b14156109555760018260058111156109405761094061142d565b141561094e5750600361099c565b6002610848565b60058360058111156109695761096961142d565b14156109985760038260058111156109835761098361142d565b14156109915750600361099c565b6004610848565b5060005b92915050565b6109ab816102ef565b6109ec5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b60448201526064015b60405180910390fd5b50565b6000546040516331a9108f60e11b815260ff8616600482015232916001600160a01b031690636352211e90602401602060405180830381865afa158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e9190611a65565b6001600160a01b031614610aa65760405162461bcd60e51b815260206004820152600f60248201526e3737ba103cb7bab91039b2b2b5b2b960891b60448201526064016109e3565b6000610ab48560ff16610693565b90506000866003811115610aca57610aca61142d565b1415610b7d578060000b60001914610b195760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9034b710323ab733b2b7b760711b60448201526064016109e3565b610b216107be565b90508060000b6000191415610b6a5760405162461bcd60e51b815260206004820152600f60248201526e191d5b99d95bdb881a5cc8199d5b1b608a1b60448201526064016109e3565b610b78868287878787611213565b610cc9565b6003866003811115610b9157610b9161142d565b1415610c16576000198160000b13610bdc5760405162461bcd60e51b815260206004820152600e60248201526d3737ba1034b710323ab733b2b7b760911b60448201526064016109e3565b60405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b5c1b195b595b9d1959608a1b60448201526064016109e3565b6001866003811115610c2a57610c2a61142d565b1415610c75576000198160000b13610b6a5760405162461bcd60e51b815260206004820152600e60248201526d3737ba1034b710323ab733b2b7b760911b60448201526064016109e3565b6002866003811115610c8957610c8961142d565b1415610cc95760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b5c1b195b595b9d1959608a1b60448201526064016109e3565b505050505050565b60006005826080015160038110610cea57610cea61186b565b600202018054909150610d335760405162461bcd60e51b81526020600482015260116024820152701b9bc81cd9595ad95c881a5b881cdb1bdd607a1b60448201526064016109e3565b60005481546040516331a9108f60e11b8152600481019190915232916001600160a01b031690636352211e90602401602060405180830381865afa158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da39190611a65565b6001600160a01b031614610df95760405162461bcd60e51b815260206004820152601b60248201527f6e6f74206f776e6572206f66207365656b657220696e20736c6f74000000000060448201526064016109e3565b600454610e069043611a8e565b60ff168260a001511115610e5c5760405162461bcd60e51b815260206004820152601860248201527f63616e6e6f74207665726966792074686520667574757265000000000000000060448201526064016109e3565b610e65826102ef565b610ea15760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b60448201526064016109e3565b8151601e11610f065760405162461bcd60e51b815260206004820152602b60248201527f64756e67656f6e2061726d6f7572206e6f74207765616b20656e6f756768207460448201526a6f20677261622072756e6560a81b60648201526084016109e3565b600b826080015160038110610f1d57610f1d61186b565b602081049091015460ff601f9092166101000a90041615610f805760405162461bcd60e51b815260206004820152601860248201527f616c726561647920636c61696d6564207468652072756e65000000000000000060448201526064016109e3565b6001600b836080015160038110610f9957610f9961186b565b6020810491909101805460ff601f9093166101000a838102199091169315150292909217909155600154600354604051630348ab1560e51b81526001600160a01b039092169263691562a092610ffd923292600160b81b9091041690600401611aa5565b6020604051808303816000875af115801561101c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104091906119d5565b505050565b600b816003811061105557600080fd5b60209182820401919006915054906101000a900460ff1681565b600060058260ff16600381106110875761108761186b565b60020201600101549050919050565b600060ff82166110a857506000919050565b6001546040516331a9108f60e11b815260ff8416600482015233916001600160a01b031690636352211e90602401602060405180830381865afa1580156110f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111179190611a65565b6001600160a01b0316146111615760405162461bcd60e51b8152602060048201526011602482015270646f6573206e6f74206f776e2072756e6560781b60448201526064016109e3565b6001546040516327257c7560e01b815260ff841660048201526001600160a01b03909116906327257c7590602401602060405180830381865afa1580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190611ac2565b600060058260ff16600381106111e8576111e861186b565b60020201556000600560ff8316600381106112055761120561186b565b600202016001018190555050565b60008054604051630178fe3f60e01b815260ff871660048201526001600160a01b0390911690630178fe3f90602401600060405180830381865afa15801561125f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112879190810190611b88565b9050600061129485611096565b905060006112a185611096565b905060006112ae85611096565b90506113c38a8a6040518060e00160405280600454436112ce9190611a8e565b60ff1660ff1681526020016112f2600360149054906101000a900460ff1688610807565b6003546113099190600160c01b900460ff16611dc9565b60ff1660ff16815260200161132d600360149054906101000a900460ff1687610807565b6003546113449190600160c01b900460ff16611dc9565b60ff1660ff16815260200161136888600360159054906101000a900460ff16610807565b89606001516113779190611dc9565b60ff1660ff16815260200161139b88600360169054906101000a900460ff16610807565b89606001516113aa9190611dc9565b60ff1681526000602082018190526040909101526104c3565b60058960ff16600381106113d9576113d961186b565b6002020154611402578760ff1660058a60ff16600381106113fc576113fc61186b565b60020201555b50505050505050505050565b6040518061012001604052806009906020820280368337509192915050565b634e487b7160e01b600052602160045260246000fd5b600681106114535761145361142d565b9052565b6020810161099c8284611443565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561149f5761149f611465565b60405290565b604051610280810167ffffffffffffffff8111828210171561149f5761149f611465565b6040805190810167ffffffffffffffff8111828210171561149f5761149f611465565b604051601f8201601f1916810167ffffffffffffffff8111828210171561151557611515611465565b604052919050565b600082601f83011261152e57600080fd5b6115366114c9565b80604084018581111561154857600080fd5b845b8181101561156257803584526020938401930161154a565b509095945050505050565b600082601f83011261157e57600080fd5b6115866114c9565b80608084018581111561159857600080fd5b845b81811015611562576115ac878261151d565b845260209093019260400161159a565b60006101c082840312156115cf57600080fd5b6115d761147b565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261161a8460c0850161151d565b60c082015261010061162e8582860161156d565b60e083015261164185610180860161151d565b908201529392505050565b80356004811061165b57600080fd5b919050565b60ff811681146109ec57600080fd5b600080600061012080858703121561168657600080fd5b61168f8561164c565b93506020808601356116a081611660565b9350605f860187136116b157600080fd5b60405160e0810181811067ffffffffffffffff821117156116d4576116d4611465565b6040529186019180888411156116e957600080fd5b604088015b8481101561170e57803561170181611660565b82529083019083016116ee565b50508093505050509250925092565b60006020828403121561172f57600080fd5b5035919050565b600681106109ec57600080fd5b6000806000806080858703121561175957600080fd5b843561176481611736565b9350602085013561177481611736565b9250604085013561178481611736565b9150606085013561179481611736565b939692955090935050565b600080604083850312156117b257600080fd5b82356117bd81611736565b915060208301356117cd81611736565b809150509250929050565b600080600080600060a086880312156117f057600080fd5b6117f98661164c565b9450602086013561180981611660565b9350604086013561181981611660565b9250606086013561182981611660565b9150608086013561183981611660565b809150509295509295909350565b60006020828403121561185957600080fd5b813561186481611660565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156118ab576118ab611881565b5060010190565b8060005b60028110156118d55781518452602093840193909101906001016118b6565b50505050565b61022081016118ea82876118b2565b60408083018660005b6002808210611902575061193d565b82518460005b83811015611926578251825260209283019290910190600101611908565b5050509284019250602091909101906001016118f3565b5050505061194e60c08301856118b2565b61010082018360005b6009811015611976578151835260209283019290910190600101611957565b50505095945050505050565b60006020828403121561199457600080fd5b8151801515811461186457600080fd5b60c08101818360005b60068110156119cc5781518352602092830192909101906001016119ad565b50505092915050565b6000602082840312156119e757600080fd5b5051919050565b610120810160048510611a0357611a0361142d565b848252602060ff80861682850152604084018560005b6007811015611a38578151841683529184019190840190600101611a19565b5050505050949350505050565b600060ff821660ff811415611a5c57611a5c611881565b60010192915050565b600060208284031215611a7757600080fd5b81516001600160a01b038116811461186457600080fd5b600082821015611aa057611aa0611881565b500390565b6001600160a01b0383168152604081016118646020830184611443565b600060208284031215611ad457600080fd5b815161186481611736565b600082601f830112611af057600080fd5b815167ffffffffffffffff811115611b0a57611b0a611465565b6020611b1e601f8301601f191682016114ec565b8281528582848701011115611b3257600080fd5b60005b83811015611b50578581018301518282018401528201611b35565b83811115611b615760008385840101525b5095945050505050565b805161165b81611660565b805161ffff8116811461165b57600080fd5b600060208284031215611b9a57600080fd5b815167ffffffffffffffff80821115611bb257600080fd5b908301906102808286031215611bc757600080fd5b611bcf6114a5565b82518152602083015182811115611be557600080fd5b611bf187828601611adf565b60208301525060408301516040820152611c0d60608401611b6b565b6060820152611c1e60808401611b6b565b6080820152611c2f60a08401611b6b565b60a0820152611c4060c08401611b6b565b60c0820152611c5160e08401611b6b565b60e0820152610100611c64818501611b6b565b90820152610120611c76848201611b6b565b90820152610140611c88848201611b6b565b908201526101608381015183811115611ca057600080fd5b611cac88828701611adf565b8284015250506101808084015183811115611cc657600080fd5b611cd288828701611adf565b8284015250506101a08084015183811115611cec57600080fd5b611cf888828701611adf565b8284015250506101c08084015183811115611d1257600080fd5b611d1e88828701611adf565b8284015250506101e08084015183811115611d3857600080fd5b611d4488828701611adf565b8284015250506102008084015183811115611d5e57600080fd5b611d6a88828701611adf565b8284015250506102208084015183811115611d8457600080fd5b611d9088828701611adf565b8284015250506102409150611da6828401611b76565b828201526102609150611dba828401611b76565b91810191909152949350505050565b600060ff821660ff84168060ff03821115611de657611de6611881565b01939250505056fea26469706673582212200e10b6eb33c7b0454ad168f339a41f88721e4814e738a5afbf923a600dbe36d164736f6c634300080b0033";

type DungeonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DungeonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dungeon__factory extends ContractFactory {
  constructor(...args: DungeonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _seekerContractAddr: PromiseOrValue<string>,
    _runeContractAddr: PromiseOrValue<string>,
    _combatVerifierContractAddr: PromiseOrValue<string>,
    _hasherContractAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Dungeon> {
    return super.deploy(
      _seekerContractAddr,
      _runeContractAddr,
      _combatVerifierContractAddr,
      _hasherContractAddr,
      overrides || {}
    ) as Promise<Dungeon>;
  }
  override getDeployTransaction(
    _seekerContractAddr: PromiseOrValue<string>,
    _runeContractAddr: PromiseOrValue<string>,
    _combatVerifierContractAddr: PromiseOrValue<string>,
    _hasherContractAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _seekerContractAddr,
      _runeContractAddr,
      _combatVerifierContractAddr,
      _hasherContractAddr,
      overrides || {}
    );
  }
  override attach(address: string): Dungeon {
    return super.attach(address) as Dungeon;
  }
  override connect(signer: Signer): Dungeon__factory {
    return super.connect(signer) as Dungeon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DungeonInterface {
    return new utils.Interface(_abi) as DungeonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Dungeon {
    return new Contract(address, _abi, signerOrProvider) as Dungeon;
  }
}
