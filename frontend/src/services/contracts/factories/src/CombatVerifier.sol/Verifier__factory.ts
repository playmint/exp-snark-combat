/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../src/CombatVerifier.sol/Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611524806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c542c93b14610030575b600080fd5b61004361003e366004611359565b610057565b604051901515815260200160405180910390f35b600061006161116c565b60408051808201825287518152602080890151818301529083528151608081018352875151818401908152885183015160608301528152825180840184528883018051518252518301518184015281830152838201528151808301835286518152868201518183015283830152815160098082526101408201909352600092909182016101208036833701905050905060005b60098110156101435784816009811061010f5761010f611437565b602002015182828151811061012657610126611437565b60209081029190910101528061013b81611463565b9150506100f4565b5061014e818361016c565b61015d57600192505050610164565b6000925050505b949350505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181610198610363565b9050806080015151855160016101ae919061147e565b146101f55760405162461bcd60e51b81526020600482015260126024820152711d995c9a599a595c8b5898590b5a5b9c1d5d60721b60448201526064015b60405180910390fd5b604080518082019091526000808252602082018190525b86518110156102e6578387828151811061022857610228611437565b60200260200101511061027d5760405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640060448201526064016101ec565b6102d2826102cd8560800151846001610296919061147e565b815181106102a6576102a6611437565b60200260200101518a85815181106102c0576102c0611437565b6020026020010151610ab7565b610b53565b9150806102de81611463565b91505061020c565b5061030f81836080015160008151811061030257610302611437565b6020026020010151610b53565b90506103456103218660000151610beb565b8660200151846000015185602001518587604001518b604001518960600151610c8a565b610355576001935050505061035d565b600093505050505b92915050565b61036b6111bd565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835190810184527f024b01333cc4067108cfec72dc00f5a63619868c8f52ba8b85b1d9ac37469a288185019081527f1b9d3b1e9ed68d0e8407d97bc7495f6a0375780fc7ae892db7a639b6de5e3f90828401528152835180850185527f1f23b07e354790a3ec66f0e94e3a8afda4c04f058e269be5688bba83baaa0be181527f110905a286f40fe2041fef15a9a61a3d499ca60b89f2a1933e781e2ce007dca58185015281840152908401528151600a8082526101608201909352919082015b60408051808201909152600080825260208201528152602001906001900390816105e757505060808201908152604080518082019091527f2feff8c38965cf86dd01d910aa7d552c9891f3d2863e026ad468517912b8b72281527f18dc054ac9366b3f920930b34c1a96aafa794e8144c33be44e0f98bc2371313e60208201529051805160009061067a5761067a611437565b602002602001018190525060405180604001604052807f07c4ea426ce4d28ed90810da5496cff043fafbbebcfff6a0a556c5e3ba6fdf7a81526020017f0de79905ec569bdccc1f4b54a235984761c5c48cc76244b03c221f77d107a87a81525081608001516001815181106106f1576106f1611437565b602002602001018190525060405180604001604052807f1fb0459b5dade4e07e64f2882562de5bcbee1773748c32bca0ab468596f058fd81526020017f2c80111e0acab27cda7dad1188bb2b60080da346454e39e8219a2b075f0546c8815250816080015160028151811061076857610768611437565b602002602001018190525060405180604001604052807f0c9ab8745ce9e6f382b68e9fe2b3cded57e6551f128cdc374371276890272dd181526020017f230bfc3238c0f35be24c64d71099cba0a55a9f1cb3f0b1c00ed005dca3ba535781525081608001516003815181106107df576107df611437565b602002602001018190525060405180604001604052807f05f77a3608ec6e94bf8cdb333e868296a2b0ff4d1a0ae66201ee3433f5c482ca81526020017f20a6f421e400e003387195b27b19fffe519668607b8f0183c63faae84942aefa815250816080015160048151811061085657610856611437565b602002602001018190525060405180604001604052807f14e5babe2301eb35d2cbf1fb4c7a32c9e6cb15042feed22c3308147c543fc8fd81526020017f061e96a957116bf1dae7bab659c4bd50121c04d8bd4bca1488d640e47946e9d881525081608001516005815181106108cd576108cd611437565b602002602001018190525060405180604001604052807f2530b321010f384fa4966ae0857788664bdf3a2093ca1fa73bd030c13b41e3a181526020017f25263c78515ad925c684dedda2ce07299df7ef7704bf95d23a5c01b24e301ef5815250816080015160068151811061094457610944611437565b602002602001018190525060405180604001604052807f2f797ea1ca9eacc11e642063168bf6ab4e237763c87c34b2b170f6e73fe5ccf981526020017f2e358fa7e7fd7a58bce0df407cd98c5b59cbb586d826c048887f450932e1b99781525081608001516007815181106109bb576109bb611437565b602002602001018190525060405180604001604052807f1c705a551aa554cb804d879202eac54363baab39b039e8cc1a6853e309d133dd81526020017f03b1adfe0cfc6432759e2e271abde02eca329248132deabf7ff28eb10ffb7c268152508160800151600881518110610a3257610a32611437565b602002602001018190525060405180604001604052807f18b211ef6f9035a4255e3f59736052ae87cd5e9cef0a9e2c274e89daa80232b781526020017f14a75fa80c8e06eae152c7f26234936b00dcc4aeda2e6aebc7086c7f8c95c7138152508160800151600981518110610aa957610aa9611437565b602002602001018190525090565b6040805180820190915260008082526020820152610ad361120e565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa9050808015610b0657610b08565bfe5b5080610b4b5760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5b5d5b0b59985a5b195960721b60448201526064016101ec565b505092915050565b6040805180820190915260008082526020820152610b6f61122c565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa9050808015610b06575080610b4b5760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5859190b59985a5b195960721b60448201526064016101ec565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790158015610c3257506020830151155b15610c525750506040805180820190915260008082526020820152919050565b604051806040016040528084600001518152602001828560200151610c779190611496565b610c8190846114b8565b90529392505050565b60408051600480825260a08201909252600091829190816020015b6040805180820190915260008082526020820152815260200190600190039081610ca557505060408051600480825260a0820190925291925060009190602082015b610cef61124a565b815260200190600190039081610ce75790505090508a82600081518110610d1857610d18611437565b60200260200101819052508882600181518110610d3757610d37611437565b60200260200101819052508682600281518110610d5657610d56611437565b60200260200101819052508482600381518110610d7557610d75611437565b60200260200101819052508981600081518110610d9457610d94611437565b60200260200101819052508781600181518110610db357610db3611437565b60200260200101819052508581600281518110610dd257610dd2611437565b60200260200101819052508381600381518110610df157610df1611437565b6020026020010181905250610e068282610e15565b9b9a5050505050505050505050565b60008151835114610e615760405162461bcd60e51b81526020600482015260166024820152751c185a5c9a5b99cb5b195b99dd1a1ccb59985a5b195960521b60448201526064016101ec565b82516000610e708260066114cf565b905060008167ffffffffffffffff811115610e8d57610e8d6112a6565b604051908082528060200260200182016040528015610eb6578160200160208202803683370190505b50905060005b838110156110f157868181518110610ed657610ed6611437565b60200260200101516000015182826006610ef091906114cf565b610efb90600061147e565b81518110610f0b57610f0b611437565b602002602001018181525050868181518110610f2957610f29611437565b60200260200101516020015182826006610f4391906114cf565b610f4e90600161147e565b81518110610f5e57610f5e611437565b602002602001018181525050858181518110610f7c57610f7c611437565b6020908102919091010151515182610f958360066114cf565b610fa090600261147e565b81518110610fb057610fb0611437565b602002602001018181525050858181518110610fce57610fce611437565b60209081029190910181015151015182610fe98360066114cf565b610ff490600361147e565b8151811061100457611004611437565b60200260200101818152505085818151811061102257611022611437565b60200260200101516020015160006002811061104057611040611437565b6020020151826110518360066114cf565b61105c90600461147e565b8151811061106c5761106c611437565b60200260200101818152505085818151811061108a5761108a611437565b6020026020010151602001516001600281106110a8576110a8611437565b6020020151826110b98360066114cf565b6110c490600561147e565b815181106110d4576110d4611437565b6020908102919091010152806110e981611463565b915050610ebc565b506110fa61126a565b6000602082602086026020860160086107d05a03fa9050808015610b0657508061115e5760405162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b60448201526064016101ec565b505115159695505050505050565b6040805160a08101909152600060608201818152608083019190915281526020810161119661124a565b81526020016111b8604051806040016040528060008152602001600081525090565b905290565b6040805160e08101909152600060a0820181815260c08301919091528152602081016111e761124a565b81526020016111f461124a565b815260200161120161124a565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528061125d611288565b81526020016111b8611288565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156112df576112df6112a6565b60405290565b604051610120810167ffffffffffffffff811182821017156112df576112df6112a6565b600082601f83011261131a57600080fd5b6113226112bc565b80604084018581111561133457600080fd5b845b8181101561134e578035845260209384019301611336565b509095945050505050565b60008060008061022080868803121561137157600080fd5b61137b8787611309565b9450604087605f88011261138e57600080fd5b6113966112bc565b8060c089018a8111156113a857600080fd5b838a015b818110156113cd576113be8c82611309565b845260209093019284016113ac565b508197506113db8b82611309565b9650505050508661011f8701126113f157600080fd5b6113f96112e5565b90860190808883111561140b57600080fd5b61010088015b83811015611429578035835260209283019201611411565b509598949750929550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156114775761147761144d565b5060010190565b600082198211156114915761149161144d565b500190565b6000826114b357634e487b7160e01b600052601260045260246000fd5b500690565b6000828210156114ca576114ca61144d565b500390565b60008160001904831182151516156114e9576114e961144d565b50029056fea2646970667358221220b803c5e936f7a834e41dc81cc8a39e9144c417b9394598c7d429e26572151a8064736f6c634300080b0033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
